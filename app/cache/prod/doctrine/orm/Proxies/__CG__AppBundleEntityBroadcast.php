<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Broadcast extends \AppBundle\Entity\Broadcast implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = ['path' => NULL];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {
        unset($this->path);

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * 
     * @param string $name
     */
    public function __get($name)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', [$name]);

            return $this->$name;
        }

        trigger_error(sprintf('Undefined property: %s::$%s', __CLASS__, $name), E_USER_NOTICE);
    }

    /**
     * 
     * @param string $name
     * @param mixed  $value
     */
    public function __set($name, $value)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__set', [$name, $value]);

            $this->$name = $value;

            return;
        }

        $this->$name = $value;
    }

    /**
     * 
     * @param  string $name
     * @return boolean
     */
    public function __isset($name)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__isset', [$name]);

            return isset($this->$name);
        }

        return false;
    }

    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Broadcast' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Broadcast' . "\0" . 'groups', '' . "\0" . 'AppBundle\\Entity\\Broadcast' . "\0" . 'name', '' . "\0" . 'AppBundle\\Entity\\Broadcast' . "\0" . 'format', '' . "\0" . 'AppBundle\\Entity\\Broadcast' . "\0" . 'description', '' . "\0" . 'AppBundle\\Entity\\Broadcast' . "\0" . 'date', '' . "\0" . 'AppBundle\\Entity\\Broadcast' . "\0" . 'status', '' . "\0" . 'AppBundle\\Entity\\Broadcast' . "\0" . 'advertiser', '' . "\0" . 'AppBundle\\Entity\\Broadcast' . "\0" . 'broadcastType', 'path', '' . "\0" . 'AppBundle\\Entity\\Broadcast' . "\0" . 'survey'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Broadcast' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Broadcast' . "\0" . 'groups', '' . "\0" . 'AppBundle\\Entity\\Broadcast' . "\0" . 'name', '' . "\0" . 'AppBundle\\Entity\\Broadcast' . "\0" . 'format', '' . "\0" . 'AppBundle\\Entity\\Broadcast' . "\0" . 'description', '' . "\0" . 'AppBundle\\Entity\\Broadcast' . "\0" . 'date', '' . "\0" . 'AppBundle\\Entity\\Broadcast' . "\0" . 'status', '' . "\0" . 'AppBundle\\Entity\\Broadcast' . "\0" . 'advertiser', '' . "\0" . 'AppBundle\\Entity\\Broadcast' . "\0" . 'broadcastType', '' . "\0" . 'AppBundle\\Entity\\Broadcast' . "\0" . 'survey'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Broadcast $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

            unset($this->path);
        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getFormat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFormat', []);

        return parent::getFormat();
    }

    /**
     * {@inheritDoc}
     */
    public function setFormat($format)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFormat', [$format]);

        return parent::setFormat($format);
    }

    /**
     * {@inheritDoc}
     */
    public function setName($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$title]);

        return parent::setName($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDate($date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDate', [$date]);

        return parent::setDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDate', []);

        return parent::getDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setURL($url)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setURL', [$url]);

        return parent::setURL($url);
    }

    /**
     * {@inheritDoc}
     */
    public function getPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPath', []);

        return parent::getPath();
    }

    /**
     * {@inheritDoc}
     */
    public function getURL()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getURL', []);

        return parent::getURL();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function getBroadcastType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBroadcastType', []);

        return parent::getBroadcastType();
    }

    /**
     * {@inheritDoc}
     */
    public function setBroadcastType(\AppBundle\Entity\BroadcastType $broadcastType = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBroadcastType', [$broadcastType]);

        return parent::setBroadcastType($broadcastType);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdvertiser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdvertiser', []);

        return parent::getAdvertiser();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdvertiser(\AppBundle\Entity\Advertiser $advertiser = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdvertiser', [$advertiser]);

        return parent::setAdvertiser($advertiser);
    }

    /**
     * {@inheritDoc}
     */
    public function setSurvey(\AppBundle\Entity\Survey $survey)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSurvey', [$survey]);

        return parent::setSurvey($survey);
    }

    /**
     * {@inheritDoc}
     */
    public function getSurvey()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSurvey', []);

        return parent::getSurvey();
    }

}
